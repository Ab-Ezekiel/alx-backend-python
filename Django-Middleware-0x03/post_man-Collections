{
  "info": {
    "name": "Messaging App API - Test Collection",
    "_postman_id": "messaging-app-collection-001",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Collection to test JWT auth, conversations and messages for the messaging_app project. Replace environment variables as needed."
  },
  "variable": [
    { "key": "base_url", "value": "http://127.0.0.1:8000" },
    { "key": "access_token", "value": "" },
    { "key": "refresh_token", "value": "" },
    { "key": "user_id", "value": "ac2f512c-2854-4483-939e-6fea47c6532d" },
    { "key": "bob_id", "value": "1dee092a-df3f-4fb8-88bf-50a3062c8fd6" },
    { "key": "conversation_id", "value": "" }
  ],
  "item": [
    {
      "name": "01 - Obtain JWT Token",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"alice\",\n  \"password\": \"pass123\"\n}"
        },
        "url": { "raw": "{{base_url}}/api/token/" }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var json = pm.response.json();",
              "if(json.access) { pm.environment.set('access_token', json.access); }",
              "if(json.refresh) { pm.environment.set('refresh_token', json.refresh); }",
              "if(json.user && json.user.user_id) { pm.environment.set('user_id', json.user.user_id); }",
              "pm.test('Token obtained', function(){ pm.expect(pm.response.code).to.be.oneOf([200,201]); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "02 - Refresh Token",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": { "mode": "raw", "raw": "{\n  \"refresh\": \"{{refresh_token}}\"\n}" },
        "url": { "raw": "{{base_url}}/api/token/refresh/" }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var json = pm.response.json();",
              "if(json.access) { pm.environment.set('access_token', json.access); }",
              "pm.test('Refresh OK', function(){ pm.expect(pm.response.code).to.be.oneOf([200,201]); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "03 - Create Conversation",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" },
          { "key": "Authorization", "value": "Bearer {{access_token}}" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"participants_ids\": [\"{{user_id}}\", \"{{bob_id}}\"]\n}"
        },
        "url": { "raw": "{{base_url}}/api/conversations/" }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var json = pm.response.json();",
              "if(json.conversation_id) { pm.environment.set('conversation_id', json.conversation_id); }",
              "pm.test('Conversation created', function(){ pm.expect(pm.response.code).to.be.oneOf([200,201]); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "04 - List Conversations",
      "request": {
        "method": "GET",
        "header": [
          { "key": "Authorization", "value": "Bearer {{access_token}}" }
        ],
        "url": { "raw": "{{base_url}}/api/conversations/" }
      }
    },
    {
      "name": "05 - Send Message (nested)",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" },
          { "key": "Authorization", "value": "Bearer {{access_token}}" }
        ],
        "body": { "mode": "raw", "raw": "{\n  \"message_body\": \"Hello from Postman!\"\n}" },
        "url": { "raw": "{{base_url}}/api/conversations/{{conversation_id}}/messages/" }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var json = pm.response.json();",
              "if(json.message_id) { pm.environment.set('last_message_id', json.message_id); }",
              "pm.test('Message created', function(){ pm.expect(pm.response.code).to.be.oneOf([200,201]); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "06 - List Messages (conversation)",
      "request": {
        "method": "GET",
        "header": [
          { "key": "Authorization", "value": "Bearer {{access_token}}" }
        ],
        "url": { "raw": "{{base_url}}/api/conversations/{{conversation_id}}/messages/" }
      }
    },
    {
      "name": "07 - Send Message (top-level)",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" },
          { "key": "Authorization", "value": "Bearer {{access_token}}" }
        ],
        "body": { "mode": "raw", "raw": "{\n  \"conversation\": \"{{conversation_id}}\",\n  \"message_body\": \"Hello from top-level messages endpoint!\"\n}" },
        "url": { "raw": "{{base_url}}/api/messages/" }
      }
    },
    {
      "name": "08 - Unauthorized access (should 401/403)",
      "request": {
        "method": "GET",
        "header": [],
        "url": { "raw": "{{base_url}}/api/conversations/" }
      }
    }
  ]
}
